# 第一范式 (First Normal Form, 1NF)

## 定义

第一范式（1NF）是关系数据库设计的基本规则之一。一个符合第一范式的数据库表中每个字段的数据都是不可再分的原子性数据，即每个单元格只能包含单一值。在一张表中，所有列必须依赖于主键，并且不能有重复的元组或行。

简单来说，1NF要求：

- 表中的每一列都必须是不可分割的。
- 每一行都是唯一的（通过主键确保）。

## 重要性

第一范式为后续的规范化步骤提供了基础。它消除了数据冗余和不一致性，提高了数据库设计的质量，使得数据库更加整洁、易于维护和查询。只有当一个表符合1NF时，才能进一步考虑是否需要进行第二范式（2NF）、第三范式（3NF）等更高级别的规范化。

## 应用场景

在设计任何关系型数据库时都需要遵守第一范式的规则，这是最基本的要求。对于那些存储大量复杂数据的企业级应用尤其重要，因为良好的数据结构有助于减少维护成本和提高查询效率。

### 示例

#### 不符合1NF的表格：

假设我们有一个关于学生选课信息的表如下所示:

| 学号 | 姓名   | 课程编号       |
| ---- | ------ | -------------- |
| 001  | 张三   | CS102, MATH103 |
| 002  | 李四   | ENG101         |

在这个表中，"课程编号"列的数据并不是原子的。每个学生可以选修多个不同的课程，而当前的设计方式会使得查询某个学生的具体课程变得复杂且容易出错。

#### 符合1NF的表格：

通过分解这张表，我们可以将其拆分为两个更清晰的关系：一个存储学生基本信息（符合1NF），另一个则专门用于记录学生与每门课程之间的关系（同样符合1NF）。

**学生信息表**

| 学号 | 姓名 |
| ---- | ---- |
| 001  | 张三 |
| 002  | 李四 |

**选课信息表**

| 学号 | 课程编号 |
| ---- | -------- |
| 001  | CS102    |
| 001  | MATH103  |
| 002  | ENG101   |

这种方式更好地满足了第一范式的条件，也方便后续进行更高级别的规范化处理。

## 使用Mermaid图表展示关系

以下为使用Mermaid语法来表示原始表格与改进后两张表之间的转换过程：

```mermaid
graph TD
    A[原始学生选课信息表] --> B{不符合1NF}
    B --> C[学生基本信息表]
    B --> D[选课信息表]
    C --> E{符合1NF}
    D --> F{符合1NF}
```

该图显示了将不规范的单一表格拆分成为两个分别遵循第一范式的独立小表的过程。