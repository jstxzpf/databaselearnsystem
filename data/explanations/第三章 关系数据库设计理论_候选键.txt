## 候选键定义

候选键是指在关系型数据库中能够唯一标识一个元组的最小属性集（即一组列）。它满足两个条件：
1. 它必须是一个超键，也就是说它的所有子集合都不能唯一确定一行。
2. 它是具有上述性质的所有可能组合中的最小集合。

**注意：候选键可以有一个或多个，但每个表中只有一个主键。**

## 候选键的重要性与应用场景

### 重要性
- **数据完整性保障**：通过使用候选键作为主键或其他唯一约束，数据库系统能确保在表内的每一行记录都是唯一的。
- **高效检索**：利用索引技术，以候选键为依据建立的索引能够显著提高查询效率。
- **减少冗余**：合理设置和选择候选键有助于避免数据冗余。

### 应用场景
例如，在一个员工信息管理系统中，可能有多种属性组合可以唯一确定某个员工的身份（如ID号、身份证号码等），这些都可以作为该表的候选键。在实际应用时，系统管理员会根据实际情况选取其中一个或多个作为主键使用。

## 具体示例

假设有一个学校的学生数据库，其中包含学生姓名、学号和班级信息：

| 学生姓名 | 学号  | 班级 |
|----------|-------|------|
| 张三     | S01   | A班  |
| 李四     | S02   | B班  |

这里，`学生姓名+学号`组合可以作为候选键，因为每个学生的姓名和学号都是唯一的。但单独的`学生姓名`或`学号`也可以构成独立的候选键。

在实际操作中，通常会选择使用**唯一且最小化的属性集**（即学号）来作为主键。

## Mermaid图表描述

以下图展示了候选键与其他相关概念之间的关系：

```mermaid
graph TD
    A[超键] -->|包含于| B(候选键)
    B --> C{选择}
    C --> |是| D[主键]
    C --> |否| E[非主属性]
```

该图中：
- 超键是可能包括过多信息的集合。
- 候选键是从超键中筛选出最小化的唯一标识集合。
- 从候选键中选择一个作为主键使用，其他未被选中的则为非主属性。